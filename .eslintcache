[{"C:\\Users\\Adrian\\OneDrive\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\index.js":"1","C:\\Users\\Adrian\\OneDrive\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\reportWebVitals.js":"2","C:\\Users\\Adrian\\OneDrive\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\App.js":"3","C:\\Users\\Adrian\\OneDrive\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\components\\PrivateRoute.js":"4","C:\\Users\\Adrian\\OneDrive\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\components\\Home.js":"5","C:\\Users\\Adrian\\OneDrive\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\components\\Navbar.js":"6","C:\\Users\\Adrian\\OneDrive\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\components\\Avstemming.js":"7","C:\\Users\\Adrian\\OneDrive\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\components\\Logginn.js":"8","C:\\Users\\Adrian\\OneDrive\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\components\\BrukerProfil.js":"9","C:\\Users\\Adrian\\OneDrive\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\components\\Registrering.js":"10","C:\\Users\\Adrian\\OneDrive\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\components\\GlemtPassord.js":"11","C:\\Users\\Adrian\\OneDrive\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\context\\authContext.js":"12","C:\\Users\\Adrian\\OneDrive\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\components\\Nominering.js":"13","C:\\Users\\Adrian\\OneDrive\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\server\\firebase.js":"14"},{"size":494,"mtime":1614854251088,"results":"15","hashOfConfig":"16"},{"size":375,"mtime":1614854251088,"results":"17","hashOfConfig":"16"},{"size":1273,"mtime":1622711279025,"results":"18","hashOfConfig":"16"},{"size":438,"mtime":1614854251080,"results":"19","hashOfConfig":"16"},{"size":1204,"mtime":1622709916698,"results":"20","hashOfConfig":"16"},{"size":5142,"mtime":1622713418749,"results":"21","hashOfConfig":"16"},{"size":3025,"mtime":1622623754764,"results":"22","hashOfConfig":"16"},{"size":2503,"mtime":1622713287337,"results":"23","hashOfConfig":"16"},{"size":9298,"mtime":1622709916690,"results":"24","hashOfConfig":"16"},{"size":4924,"mtime":1622709916698,"results":"25","hashOfConfig":"16"},{"size":1821,"mtime":1622709916690,"results":"26","hashOfConfig":"16"},{"size":5841,"mtime":1622710943134,"results":"27","hashOfConfig":"16"},{"size":2257,"mtime":1622709916698,"results":"28","hashOfConfig":"16"},{"size":674,"mtime":1620724914729,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"9hfqwk",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\Adrian\\OneDrive\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\index.js",[],["61","62"],"C:\\Users\\Adrian\\OneDrive\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\reportWebVitals.js",[],"C:\\Users\\Adrian\\OneDrive\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\App.js",[],"C:\\Users\\Adrian\\OneDrive\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\components\\PrivateRoute.js",[],"C:\\Users\\Adrian\\OneDrive\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\components\\Home.js",[],"C:\\Users\\Adrian\\OneDrive\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\components\\Navbar.js",["63","64"],"C:\\Users\\Adrian\\OneDrive\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\components\\Avstemming.js",["65"],"import React, { useState, useEffect, useRef } from 'react'\r\nimport  { db } from \"../server/firebase\"\r\nimport { useAuth } from \"../context/authContext\";\r\n\r\nexport default function Avstemming() {\r\n\r\n    const [brukere, setBruker] = useState(\"\")\r\n    const [harStemt, setharStemt] = useState();\r\n    const [voteId, setVoteId] = useState()\r\n    const { stemBruker, brukerHarStemt, gjeldeneBruker, votedOn } = useAuth()\r\n    const fornavnRef = useRef()\r\n    const etternavnRef = useRef()\r\n    const beskrivelseRef = useRef()\r\n\r\n\r\n    useEffect(() => {\r\n        db.collection('BrukerInfo')\r\n        .where(\"Nominert\", \"==\", true)\r\n        .get()\r\n        .then(snapshot => {\r\n          const documents = snapshot.docs.map(doc => doc.data())\r\n          setBruker(documents);\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const unsub = db.collection('BrukerInfo').doc(gjeldeneBruker.uid)\r\n        .onSnapshot(function (doc){\r\n            const stemmeSjekk = doc.data().harStemt;\r\n            const votedId = doc.data().votedOn\r\n            setVoteId(votedId)\r\n            //console.log(stemmeSjekk)\r\n            if(stemmeSjekk === true){\r\n                setharStemt(stemmeSjekk)\r\n            }\r\n            return unsub\r\n        })\r\n        \r\n        \r\n    }, [])\r\n\r\n    \r\n\r\n    async function handleSubmit(id) {\r\n        const brukerFinner = brukere.find(bruker => bruker.id === id)\r\n        await stemBruker(brukerFinner.id, 1);\r\n        //console.log(gjeldeneBruker)\r\n        await brukerHarStemt(gjeldeneBruker.uid, true)\r\n        await votedOn(gjeldeneBruker.uid, brukerFinner.id)\r\n        \r\n    }\r\n\r\n   async function handleRegret() {\r\n        await stemBruker(voteId, -1)\r\n        await brukerHarStemt(gjeldeneBruker.uid, false)\r\n        await votedOn(gjeldeneBruker.uid, \"\")\r\n        window.location.reload()\r\n        \r\n    }\r\n\r\n    return ( \r\n    <div className=\"App\">\r\n        <div className=\"row width-margin\">\r\n        <h3 className=\"tittel-tekst\">Stem på en kandidat</h3>\r\n        <p>Trykk på \"stem\" for å stemme på en kandidat. Kandidaten vil da få en stemme</p>\r\n        { brukere && brukere.map(bruker => {\r\n        return(\r\n            <div className=\"col width-margin m6 card-panel nominerKort\" key= {bruker.id}>\r\n                <p ref={ fornavnRef } ><strong>{ bruker.Fornavn }</strong> </p>\r\n                <p ref={ etternavnRef } ><strong>{ bruker.Etternavn }</strong>:</p>\r\n                <p ref={ beskrivelseRef } > { bruker.beskrivelse } </p>\r\n                {  !harStemt && <button className=\"float-right btn waves-effect waves-light\" onClick= { () => handleSubmit(bruker.id) } >Stem</button>}\r\n                {   harStemt && <button className=\"float-right btn waves-effect waves-light\" onClick= { () => handleSubmit(bruker.id) } disabled >Stem</button>}\r\n            </div>\r\n        )}\r\n        )\r\n        }\r\n        { harStemt && <button className=\"float-right btn waves-effect waves-light\" onClick= {() => handleRegret()}>Angre</button>}\r\n        </div>\r\n    </div>\r\n     );\r\n}\r\n \r\n","C:\\Users\\Adrian\\OneDrive\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\components\\Logginn.js",["66"],"C:\\Users\\Adrian\\OneDrive\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\components\\BrukerProfil.js",["67"],"import React, { useRef, useState, useEffect } from \"react\";\r\nimport { useAuth } from \"../context/authContext\";\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport { storage, db } from \"../server/firebase\";\r\n\r\n\r\n\r\nexport default function App() {\r\n    const [file, setFile] = useState(null);\r\n    const { uploadBilde } = useAuth();\r\n    const [error, setError] = useState(\"\");\r\n    const [checked, setChecked] = useState(false);\r\n    const [erNominert, setErNominert] = useState()\r\n    //Får å disable ulike ting mens siden loader\r\n    const [loading, setLoading] = useState(false);\r\n    const { gjeldeneBruker, oppdaterMail, oppdaterPassord, oppdaterFNavn, oppdaterENavn, oppdaterNom, oppdaterBeskrivelse, nominerbarDisplay, fornavnDisplay, etternavnDisplay } = useAuth();\r\n    const fornavnRef = useRef()\r\n    const etternavnRef = useRef()\r\n    const emailRef = useRef()\r\n    const passordRef = useRef()\r\n    const passordGjRef = useRef()\r\n    const beskrivelseRef = useRef()\r\n    const nomineringRef = useRef()\r\n    const bildeRef = useRef()\r\n    const history = useHistory()\r\n    const [picUrl, setPicUrl] = useState()\r\n\r\n    \r\n   \r\n\r\n    storage.ref('brukere/' + gjeldeneBruker.uid + '/profile.jpg').getDownloadURL().then((url) => {\r\n        setPicUrl(url);\r\n        gjeldeneBruker.updateProfile({\r\n          photoURL: picUrl\r\n        })\r\n       })\r\n    \r\n    //Sjekker om Eposten har usn.no i seg\r\n    var reg = /^\\w+([-+.']\\w+)*@(usn.no)/\r\n\r\n  \r\n    function handleChange(e) {\r\n      setFile(e.target.files[0]);\r\n    }\r\n    \r\n    function handleNominer(e){\r\n      setChecked(e.target.checked)\r\n   console.log(checked)\r\n    }\r\n\r\n    useEffect(() => {\r\n      const unsub = db.collection('BrukerInfo').doc(gjeldeneBruker.uid)\r\n      .onSnapshot(function (doc){\r\n          const nomSjekk = doc.data().Nominert;\r\n          //console.log(stemmeSjekk)\r\n          if(nomSjekk === true){\r\n              setErNominert(nomSjekk)\r\n          }\r\n          return unsub\r\n      })\r\n      \r\n      \r\n  }, [])\r\n\r\n//console.log(gjeldeneBruker)\r\n    async function handleSubmit(e) {\r\n      e.preventDefault()\r\n      //Sjekker hvis Eposten er usn og endrer alt til lowercase\r\n      if(!reg.test(emailRef.current.value.toLowerCase())){\r\n        return setError(\"Dette er ikke en usn epost\")\r\n      }\r\n\r\n      //Skjekker om passordene er like\r\n      if (passordRef.current.value !== passordGjRef.current.value) {\r\n        return setError(\"Passord matcher ikke\")\r\n      }   \r\n      //Array med regler\r\n      const regler = []\r\n      try {\r\n        setError(\"\")\r\n        setLoading(true) \r\n              //Skjekker at den nye mailen som blir tastet inn ikke er lik den gjeldene mailen\r\n      if (emailRef.current.value !== gjeldeneBruker.email) {\r\n        //Hvis spørringen over er true blir den nye mailen lagt inn som ny mail i arrayet\r\n       await regler.push(oppdaterMail(emailRef.current.value))\r\n      }\r\n      //Skjekker om passord blir endret hvis det endtres legges det inn i arrayet\r\n      if (passordRef.current.value) {\r\n        await regler.push(oppdaterPassord(passordRef.current.value))\r\n      }\r\n      //Skjekker om Fornavnet blir endret hvis det endtres legges det inn i arrayet\r\n      if (fornavnRef.current.value) {\r\n        await regler.push(oppdaterFNavn(fornavnRef.current.value))\r\n      }\r\n      //Skjekker om Etternavn blir endret hvis det endtres legges det inn i arrayet\r\n      if (etternavnRef.current.value) {\r\n        await regler.push(oppdaterENavn(etternavnRef.current.value))\r\n      }\r\n\r\n      if(beskrivelseRef.current.value) {\r\n        await regler.push(oppdaterBeskrivelse(beskrivelseRef.current.value))\r\n      }\r\n\r\n\r\n        } catch {\r\n          setError(\"Opplastning mislykkes\")\r\n        }\r\n        setLoading(false)\r\n  \r\n      Promise.all(regler)\r\n        //Hvis alle reglene er oppfylt blir man sendt til hjem siden\r\n        .then(() => {\r\n          history.push(\"/\")\r\n        })\r\n        //Hvis reglene ikke oppfylles blir denne errormeldingen sendt\r\n        .catch(() => {\r\n          setError(\"Mislykket ved oppdatering av profil! Prøv på nytt\")\r\n        })\r\n        .finally(() => {\r\n          setLoading(false)\r\n        })\r\n    }\r\n\r\n    async function handlePictureUpload(e) {\r\n      await uploadBilde(file)\r\n    }\r\n\r\n    async function handleNominationChange(e) {\r\n      e.preventDefault()\r\n      await oppdaterNom(checked)\r\n    }\r\n  \r\n    return (\r\n    <div className=\"App\">\r\n        <div className=\"row\">\r\n        \r\n              <div className=\"col card-panel myProfile\">\r\n                {gjeldeneBruker.photoURL && <img src={ gjeldeneBruker.photoURL } width=\"100\" height=\"100\" alt=\"avatar\" className=\"circle z-depth-2 profiBilde\"/> }\r\n                <h5>Hei {fornavnDisplay} ha en strålende dag!</h5>\r\n                <p className=\"profilStorTekst\">{fornavnDisplay}  {etternavnDisplay}</p>\r\n                <p>{gjeldeneBruker.email}</p>\r\n              </div>\r\n            \r\n            <div className=\"col s12 offset-m1 m4 card-panel\">\r\n            {/*<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js\" />*/}\r\n                <h3 className=\"tittel-tekst\">Oppdater profil</h3>\r\n                {error && <p>{error}</p>}\r\n                <form action=\"\" className=\"col s12\" onSubmit= {handleSubmit} >\r\n               \r\n                        <div className=\"input-field col s12\">\r\n                            <input \r\n                              type=\"text\" \r\n                              placeholder=\"Fornavn\" \r\n                              ref={fornavnRef} \r\n                              className=\"validate\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"input-field col s12\">\r\n                            <input \r\n                              type=\"text\" \r\n                              placeholder=\"Etternavn\" \r\n                              ref={etternavnRef} \r\n                              className=\"validate\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"input-field col s12\">\r\n                            <input \r\n                              type=\"text\" \r\n                              placeholder=\"Beskrivelse\"\r\n                              ref={beskrivelseRef} \r\n                              className=\"validate\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"input-field col s12\">\r\n                            <input \r\n                              type=\"email\" \r\n                              defaultValue={gjeldeneBruker.email}\r\n                              ref={emailRef} \r\n                              className=\"validate\"\r\n                              required\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"input-field col s12\">\r\n                            <input \r\n                              type=\"password\" \r\n                              placeholder=\"Passord\" \r\n                              ref={passordRef} \r\n                              className=\"validate\"/>\r\n                        </div>\r\n\r\n                        <div className=\"input-field col s12\">\r\n                            <input \r\n                              type=\"password\" \r\n                              placeholder=\"Gjenta Passord\" \r\n                              ref={passordGjRef} \r\n                              className=\"validate\"\r\n                            />\r\n                        </div>\r\n                        \r\n                        \r\n\r\n                        \r\n               \r\n                        {error && <p> {error} </p> }\r\n                        <br></br>\r\n                        \r\n                    \r\n                    <button disabled={loading} type=\"submit\" className=\"btn waves-effect waves-light right\">Oppdater info</button>\r\n                    <Link to=\"/\">Avslutt</Link>\r\n                </form>\r\n                {!erNominert && <form action=\"\" className=\"col s12\" onSubmit={handleNominationChange}>\r\n                <p>\r\n                          <label>\r\n                            <input type=\"checkbox\" className=\"\" onChange={handleNominer} ref={nomineringRef} />\r\n                            { nominerbarDisplay === true && <input type=\"checkbox\" className=\"filled-in\" onChange={handleNominer} ref={nomineringRef} /> }\r\n                            <span>Vil du være nominerbar?</span>\r\n                          </label>\r\n                          <button disabled={loading} type=\"submit\" className=\"btn waves-effect waves-light right\">Endre Nominering</button>\r\n                </p>\r\n                </form>}\r\n\r\n                <form action=\"\" className=\"col s12\" onSubmit= {handlePictureUpload}>\r\n                <h5 className=\"tittel-tekst\">Last opp/endre profilbilde: </h5>\r\n                        <input type=\"file\" id=\"imgInp\" onChange={handleChange} ref={bildeRef}/>\r\n                        <button disabled={loading} type=\"submit\" className=\"btn waves-effect waves-light right\">Last opp bilde</button>\r\n                </form>\r\n                {/*<img src={gjeldeneBruker.photoURL} width=\"100\" height=\"100\" alt=\"avatar\" className=\"circle\"/>*/}\r\n            </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","C:\\Users\\Adrian\\OneDrive\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\components\\Registrering.js",[],"C:\\Users\\Adrian\\OneDrive\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\components\\GlemtPassord.js",[],"C:\\Users\\Adrian\\OneDrive\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\context\\authContext.js",[],"C:\\Users\\Adrian\\OneDrive\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\components\\Nominering.js",[],"C:\\Users\\Adrian\\OneDrive\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\server\\firebase.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":34,"column":13,"nodeType":"74","endLine":34,"endColumn":78},{"ruleId":"72","severity":1,"message":"73","line":63,"column":7,"nodeType":"74","endLine":63,"endColumn":72},{"ruleId":"75","severity":1,"message":"76","line":40,"column":8,"nodeType":"77","endLine":40,"endColumn":10,"suggestions":"78"},{"ruleId":"79","severity":1,"message":"80","line":11,"column":20,"nodeType":"81","messageId":"82","endLine":11,"endColumn":34},{"ruleId":"75","severity":1,"message":"76","line":63,"column":6,"nodeType":"77","endLine":63,"endColumn":8,"suggestions":"83"},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'gjeldeneBruker.uid'. Either include it or remove the dependency array.","ArrayExpression",["86"],"no-unused-vars","'gjeldeneBruker' is assigned a value but never used.","Identifier","unusedVar",["87"],"no-global-assign","no-unsafe-negation",{"desc":"88","fix":"89"},{"desc":"88","fix":"90"},"Update the dependencies array to be: [gjeldeneBruker.uid]",{"range":"91","text":"92"},{"range":"93","text":"92"},[1265,1267],"[gjeldeneBruker.uid]",[2001,2003]]