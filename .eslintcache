[{"C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\index.js":"1","C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\App.js":"2","C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\reportWebVitals.js":"3","C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\components\\Navbar.js":"4","C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\components\\Avstemming.js":"5","C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\components\\Logginn.js":"6","C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\components\\GlemtPassord.js":"7","C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\components\\Registrering.js":"8","C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\components\\Home.js":"9","C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\components\\PrivateRoute.js":"10","C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\components\\Nominering.js":"11","C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\context\\authContext.js":"12","C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\components\\BrukerProfil.js":"13","C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\server\\firebase.js":"14"},{"size":478,"mtime":1611241553792,"results":"15","hashOfConfig":"16"},{"size":1280,"mtime":1622125250970,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1620651356347,"results":"18","hashOfConfig":"16"},{"size":4792,"mtime":1622562241584,"results":"19","hashOfConfig":"16"},{"size":3025,"mtime":1622563306829,"results":"20","hashOfConfig":"16"},{"size":2463,"mtime":1618568038436,"results":"21","hashOfConfig":"16"},{"size":1803,"mtime":1618565645487,"results":"22","hashOfConfig":"16"},{"size":4531,"mtime":1622550398447,"results":"23","hashOfConfig":"16"},{"size":1194,"mtime":1622563253045,"results":"24","hashOfConfig":"16"},{"size":438,"mtime":1611546185441,"results":"25","hashOfConfig":"16"},{"size":2256,"mtime":1622563292033,"results":"26","hashOfConfig":"16"},{"size":5958,"mtime":1622550398451,"results":"27","hashOfConfig":"16"},{"size":9327,"mtime":1622563387871,"results":"28","hashOfConfig":"16"},{"size":674,"mtime":1621076668910,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"j3pdh5",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\index.js",[],["60","61"],"C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\App.js",[],"C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\reportWebVitals.js",[],"C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\components\\Navbar.js",["62","63"],"C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\components\\Avstemming.js",["64"],"C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\components\\Logginn.js",[],"C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\components\\GlemtPassord.js",[],"C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\components\\Registrering.js",[],"C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\components\\Home.js",[],"C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\components\\PrivateRoute.js",[],"C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\components\\Nominering.js",[],"C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\context\\authContext.js",["65"],"import React, { useContext, useState, useEffect} from \"react\"\r\nimport  { auth, db } from \"../server/firebase\"\r\nimport 'firebase/firestore';\r\nimport { storage } from \"../server/firebase\";\r\nimport firebase from 'firebase/app'\r\n\r\n\r\n\r\n\r\n\r\n//Når nye komponenter blir tatt frem lytter de til context objektet laget her\r\nconst AuthContext = React.createContext()\r\n\r\n//Gir tilgang til verdiene i andre komponenter\r\nexport function useAuth() {\r\n  return useContext(AuthContext)\r\n}\r\n\r\n//1. Dette er informasjon som vi ønsker at skal få tilgang til context\r\n//2. gjeldeneBruker håndtere alle bruker attributter. f.eks. info ved registrering og state til ulike komponenter\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [gjeldeneBruker, setGjeldeneBruker] = useState()\r\n  const [fornavnDisplay, setFornavnDisplay] = useState()\r\n  const [etternavnDisplay, setEtternavnDisplay] = useState()\r\n  const [nominerbarDisplay, setNominerbarDisplay] = useState()\r\n  const [loading, setLoading] = useState(true)\r\n  const [errors, setError] = useState(\"\")\r\n  \r\n\r\nfunction stemBruker(id, valueChange) {\r\n  return db.collection(\"BrukerInfo\")\r\n  .doc(id)\r\n  .update({\r\n    antallStemmer: firebase.firestore.FieldValue.increment(valueChange)\r\n  })\r\n}\r\n\r\n\r\nfunction brukerHarStemt(id, booleanParam) {\r\n  return db.collection(\"BrukerInfo\")\r\n  .doc(id)\r\n  .update({\r\n    harStemt: booleanParam\r\n  })\r\n}\r\n\r\nfunction votedOn(id, stemtId) {\r\n  return db.collection(\"BrukerInfo\")\r\n  .doc(id)\r\n  .update({\r\n    votedOn: stemtId\r\n  })\r\n}\r\n\r\n \r\nasync function nominerBruker(id, fornavn, etternavn){\r\n  await db.collection(\"BrukerInfo\")\r\n  .doc(id)\r\n  .update({\r\n    Nominert: true,\r\n    Nominerbar: false\r\n  })\r\n  .then(() => {\r\n    console.log(fornavn + \" \" + etternavn + \" er nominert\")\r\n  })\r\n  .catch((error) => {\r\n    console.error(\"Kunne ikke nominere\")\r\n  })\r\n}\r\n\r\n//Henter inn informasjon fra registering og legger det inn i firebase\r\n  function registrer(email, password, fornavn, etternavn, nominerbar) {\r\n    auth.createUserWithEmailAndPassword(email, password).then( cred => {\r\n      return db.collection('BrukerInfo').doc(cred.user.uid).set({\r\n        Email: email, \r\n        Fornavn: fornavn,\r\n        Etternavn: etternavn,\r\n        Nominerbar: nominerbar,\r\n        beskrivelse: null,\r\n        id: cred.user.uid,\r\n        harStemt: false,\r\n        votedOn:\"\",\r\n        antallStemmer: 0,\r\n        Nominert: false\r\n      })  \r\n    }).catch(function(error) {\r\n      var errorCode = error.code;\r\n      var errorMessage = error.message;\r\n      if(errorCode == \"auth/email-already-in-use\"){\r\n        setError(errorMessage)\r\n    } else {\r\n      setError(errorMessage);\r\n    }\r\n    console.log(error);\r\n  });\r\n  setError(\"\")\r\n  }\r\n\r\n\r\n  function logginn(email, password) {\r\n    return auth.signInWithEmailAndPassword(email, password)\r\n    \r\n  }\r\n\r\n  function loggut() {\r\n    auth.signOut();\r\n  }\r\n\r\n  function glemtPassord(email) {\r\n    return auth.sendPasswordResetEmail(email);\r\n }\r\n\r\n function uploadBilde(picFile) {\r\n  return storage.ref('brukere/' + gjeldeneBruker.uid + '/profile.jpg').put(picFile);\r\n }\r\n\r\n function oppdaterMail(email) {\r\n  return gjeldeneBruker.updateEmail(email)\r\n}\r\n\r\nfunction oppdaterPassord(password) {\r\n  return gjeldeneBruker.updatePassword(password)\r\n}\r\n\r\nfunction oppdaterFNavn (fornavn)  {\r\n  return db.collection('BrukerInfo').doc(gjeldeneBruker.uid).update({\r\n    Fornavn: fornavn\r\n  })\r\n}\r\nfunction oppdaterENavn (etternavn)  {\r\n  return db.collection('BrukerInfo').doc(gjeldeneBruker.uid).update({\r\n    Etternavn: etternavn\r\n  })\r\n}\r\n\r\nfunction oppdaterNom(nominerbar) {\r\n  return db.collection('BrukerInfo').doc(gjeldeneBruker.uid).update({\r\n    Nominerbar: nominerbar\r\n  })\r\n} \r\n\r\nfunction oppdaterBeskrivelse(beskrivelse) {\r\n  return db.collection('BrukerInfo').doc(gjeldeneBruker.uid).update({\r\n    beskrivelse: beskrivelse\r\n  })\r\n}\r\n\r\nfunction sjekkEpost() {\r\n  setTimeout(() => {\r\n    if(registrer() === false){\r\n      setError(\"Feil\")\r\n    }\r\n    var user = firebase.auth().currentUser;\r\n    user.sendEmailVerification().then(function() {\r\n      setError(\"Aktiverings epost er sendt til din epost\")// Email sent.\r\n    }).catch(function(err) {\r\n  \r\n      \r\n    });      \r\n    console.log(user.sendEmailVerification());\r\n\r\n  }, 2000);\r\n}\r\n\r\n  \r\n  //useEffect: Når noe skjer vil vi at en bivirkning skal skje\r\n  //setTimeout setter en delay før den skal displaye fornavn og etternavn\r\n  //3. Unsubscribe gjør slik at etter eventen har skjedd, stopper serveren å lytte til den\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      setGjeldeneBruker(user)\r\n      if(user) {\r\n        setTimeout(() => {\r\n        db.collection(\"BrukerInfo\").doc(user.uid).onSnapshot(function (doc){\r\n          const firstName = doc.data().Fornavn;\r\n          const lastName = doc.data().Etternavn;\r\n          const nominert = doc.data().Nominerbar;\r\n          setFornavnDisplay(firstName);\r\n          setEtternavnDisplay(lastName);\r\n          setNominerbarDisplay(nominert)\r\n          /*console.log(firstName, lastName)*/\r\n       });\r\n      }, 500);\r\n      }\r\n      setLoading(false)\r\n      return unsubscribe\r\n    })\r\n\r\n    \r\n  }, [])\r\n\r\n  //Ulike verdier man gir Provider tilgang til å lytte etter\r\n  const value = {\r\n    gjeldeneBruker,\r\n    fornavnDisplay,\r\n    etternavnDisplay,\r\n    nominerbarDisplay,\r\n    errors,\r\n    registrer,\r\n    logginn,\r\n    loggut,\r\n    glemtPassord,\r\n    uploadBilde,\r\n    oppdaterPassord,\r\n    oppdaterMail,\r\n    oppdaterFNavn,\r\n    oppdaterENavn,\r\n    oppdaterNom,\r\n    oppdaterBeskrivelse,\r\n    nominerBruker,\r\n    stemBruker,\r\n    brukerHarStemt,\r\n    sjekkEpost,\r\n    votedOn\r\n  }\r\n\r\n  return (\r\n      //1. Setter inn all data i Provider som trenger tilgang til informasjon i context\r\n      //2. Alt på innsiden av Provider wrapperen har tilgang til denne informasjonen\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  )\r\n}","C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\components\\BrukerProfil.js",["66"],"C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\server\\firebase.js",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":34,"column":13,"nodeType":"73","endLine":34,"endColumn":78},{"ruleId":"71","severity":1,"message":"72","line":61,"column":7,"nodeType":"73","endLine":61,"endColumn":72},{"ruleId":"74","severity":1,"message":"75","line":40,"column":8,"nodeType":"76","endLine":40,"endColumn":10,"suggestions":"77"},{"ruleId":"78","severity":1,"message":"79","line":90,"column":20,"nodeType":"80","messageId":"81","endLine":90,"endColumn":22},{"ruleId":"74","severity":1,"message":"75","line":63,"column":6,"nodeType":"76","endLine":63,"endColumn":8,"suggestions":"82"},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'gjeldeneBruker.uid'. Either include it or remove the dependency array.","ArrayExpression",["85"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["86"],"no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},{"desc":"87","fix":"89"},"Update the dependencies array to be: [gjeldeneBruker.uid]",{"range":"90","text":"91"},{"range":"92","text":"91"},[1265,1267],"[gjeldeneBruker.uid]",[2001,2003]]