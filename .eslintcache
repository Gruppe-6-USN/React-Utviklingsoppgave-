[{"/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/index.js":"1","/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/App.js":"2","/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/reportWebVitals.js":"3","/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/components/Registrering.js":"4","/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/components/PrivateRoute.js":"5","/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/components/Logginn.js":"6","/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/components/Home.js":"7","/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/components/GlemtPassord.js":"8","/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/components/Navbar.js":"9","/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/context/authContext.js":"10","/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/components/Nominering.js":"11","/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/components/BrukerProfil.js":"12","/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/components/Avstemming.js":"13","/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/server/firebase.js":"14"},{"size":478,"mtime":1622451491724,"results":"15","hashOfConfig":"16"},{"size":1245,"mtime":1622451491722,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1622451491724,"results":"18","hashOfConfig":"16"},{"size":4414,"mtime":1622549239634,"results":"19","hashOfConfig":"16"},{"size":421,"mtime":1622451491723,"results":"20","hashOfConfig":"16"},{"size":2407,"mtime":1622620855331,"results":"21","hashOfConfig":"16"},{"size":1168,"mtime":1622626117719,"results":"22","hashOfConfig":"16"},{"size":1750,"mtime":1622451491723,"results":"23","hashOfConfig":"16"},{"size":4763,"mtime":1622625762769,"results":"24","hashOfConfig":"16"},{"size":5734,"mtime":1622549239634,"results":"25","hashOfConfig":"16"},{"size":2197,"mtime":1622620678374,"results":"26","hashOfConfig":"16"},{"size":9091,"mtime":1622625418047,"results":"27","hashOfConfig":"16"},{"size":2942,"mtime":1622620678372,"results":"28","hashOfConfig":"16"},{"size":654,"mtime":1622451491724,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1yy4w9a",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/index.js",[],["61","62"],"/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/App.js",[],"/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/reportWebVitals.js",[],"/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/components/Registrering.js",[],"/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/components/PrivateRoute.js",[],"/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/components/Logginn.js",[],"/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/components/Home.js",[],"/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/components/GlemtPassord.js",[],"/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/components/Navbar.js",["63","64"],"/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/context/authContext.js",[],"/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/components/Nominering.js",[],"/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/components/BrukerProfil.js",["65"],"import React, { useRef, useState, useEffect } from \"react\";\nimport { useAuth } from \"../context/authContext\";\nimport { Link, useHistory } from \"react-router-dom\"\nimport { storage, db } from \"../server/firebase\";\n\n\n\nexport default function App() {\n    const [file, setFile] = useState(null);\n    const { uploadBilde } = useAuth();\n    const [error, setError] = useState(\"\");\n    const [checked, setChecked] = useState(false);\n    const [erNominert, setErNominert] = useState()\n    //Får å disable ulike ting mens siden loader\n    const [loading, setLoading] = useState(false);\n    const { gjeldeneBruker, oppdaterMail, oppdaterPassord, oppdaterFNavn, oppdaterENavn, oppdaterNom, oppdaterBeskrivelse, nominerbarDisplay, fornavnDisplay, etternavnDisplay } = useAuth();\n    const fornavnRef = useRef()\n    const etternavnRef = useRef()\n    const emailRef = useRef()\n    const passordRef = useRef()\n    const passordGjRef = useRef()\n    const beskrivelseRef = useRef()\n    const nomineringRef = useRef()\n    const bildeRef = useRef()\n    const history = useHistory()\n    const [picUrl, setPicUrl] = useState()\n\n    \n   \n\n    storage.ref('brukere/' + gjeldeneBruker.uid + '/profile.jpg').getDownloadURL().then((url) => {\n        setPicUrl(url);\n        gjeldeneBruker.updateProfile({\n          photoURL: picUrl\n        })\n       })\n    \n    //Sjekker om Eposten har usn.no i seg\n    var reg = /^\\w+([-+.']\\w+)*@(usn.no)/\n\n  \n    function handleChange(e) {\n      setFile(e.target.files[0]);\n    }\n    \n    function handleNominer(e){\n      setChecked(e.target.checked)\n   console.log(checked)\n    }\n\n    useEffect(() => {\n      const unsub = db.collection('BrukerInfo').doc(gjeldeneBruker.uid)\n      .onSnapshot(function (doc){\n          const nomSjekk = doc.data().Nominert;\n          //console.log(stemmeSjekk)\n          if(nomSjekk === true){\n              setErNominert(nomSjekk)\n          }\n          return unsub\n      })\n      \n      \n  }, [])\n\n//console.log(gjeldeneBruker)\n    async function handleSubmit(e) {\n      e.preventDefault()\n      //Sjekker hvis Eposten er usn og endrer alt til lowercase\n      if(!reg.test(emailRef.current.value.toLowerCase())){\n        return setError(\"Dette er ikke en usn epost\")\n      }\n\n      //Skjekker om passordene er like\n      if (passordRef.current.value !== passordGjRef.current.value) {\n        return setError(\"Passord matcher ikke\")\n      }   \n      //Array med regler\n      const regler = []\n      try {\n        setError(\"\")\n        setLoading(true) \n              //Skjekker at den nye mailen som blir tastet inn ikke er lik den gjeldene mailen\n      if (emailRef.current.value !== gjeldeneBruker.email) {\n        //Hvis spørringen over er true blir den nye mailen lagt inn som ny mail i arrayet\n       await regler.push(oppdaterMail(emailRef.current.value))\n      }\n      //Skjekker om passord blir endret hvis det endtres legges det inn i arrayet\n      if (passordRef.current.value) {\n        await regler.push(oppdaterPassord(passordRef.current.value))\n      }\n      //Skjekker om Fornavnet blir endret hvis det endtres legges det inn i arrayet\n      if (fornavnRef.current.value) {\n        await regler.push(oppdaterFNavn(fornavnRef.current.value))\n      }\n      //Skjekker om Etternavn blir endret hvis det endtres legges det inn i arrayet\n      if (etternavnRef.current.value) {\n        await regler.push(oppdaterENavn(etternavnRef.current.value))\n      }\n\n      if(beskrivelseRef.current.value) {\n        await regler.push(oppdaterBeskrivelse(beskrivelseRef.current.value))\n      }\n\n\n        } catch {\n          setError(\"Opplastning mislykkes\")\n        }\n        setLoading(false)\n  \n      Promise.all(regler)\n        //Hvis alle reglene er oppfylt blir man sendt til hjem siden\n        .then(() => {\n          history.push(\"/\")\n        })\n        //Hvis reglene ikke oppfylles blir denne errormeldingen sendt\n        .catch(() => {\n          setError(\"Mislykket ved oppdatering av profil! Prøv på nytt\")\n        })\n        .finally(() => {\n          setLoading(false)\n        })\n    }\n\n    async function handlePictureUpload(e) {\n      await uploadBilde(file)\n    }\n\n    async function handleNominationChange(e) {\n      e.preventDefault()\n      await oppdaterNom(checked)\n    }\n  \n    return (\n    <div className=\"App\">\n        <div className=\"row\">\n        \n              <div className=\"col l2 push-s1 width-margin m5 card-panel myProfile\">\n                {gjeldeneBruker.photoURL && <img src={ gjeldeneBruker.photoURL } width=\"100\" height=\"100\" alt=\"avatar\" className=\"circle z-depth-2 profiBilde\"/> }\n                <h5>Hei {fornavnDisplay} ha en strålende dag!</h5>\n                <p className=\"profilStorTekst\">{fornavnDisplay}  {etternavnDisplay}</p>\n                <p>{gjeldeneBruker.email}</p>\n              </div>\n            \n            <div className=\"col s12 offset-m1 m4 card-panel\">\n            {/*<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js\" />*/}\n\n                <h3 className=\"tittel-tekst\">Oppdater profil</h3>\n                {error && <p>{error}</p>}\n                <form action=\"\" className=\"col s12\" onSubmit= {handleSubmit} >\n               \n                        <div className=\"input-field col s12\">\n                            <input \n                              type=\"text\" \n                              placeholder=\"Fornavn\" \n                              ref={fornavnRef} \n                              className=\"validate\"\n                            />\n                        </div>\n\n                        <div className=\"input-field col s12\">\n                            <input \n                              type=\"text\" \n                              placeholder=\"Etternavn\" \n                              ref={etternavnRef} \n                              className=\"validate\"\n                            />\n                        </div>\n\n                        <div className=\"input-field col s12\">\n                            <input \n                              type=\"text\" \n                              placeholder=\"Beskrivelse\"\n                              ref={beskrivelseRef} \n                              className=\"validate\"\n                            />\n                        </div>\n\n                        <div className=\"input-field col s12\">\n                            <input \n                              type=\"email\" \n                              defaultValue={gjeldeneBruker.email}\n                              ref={emailRef} \n                              className=\"validate\"\n                              required\n                            />\n                        </div>\n\n                        <div className=\"input-field col s12\">\n                            <input \n                              type=\"password\" \n                              placeholder=\"Passord\" \n                              ref={passordRef} \n                              className=\"validate\"/>\n                        </div>\n\n                        <div className=\"input-field col s12\">\n                            <input \n                              type=\"password\" \n                              placeholder=\"Gjenta Passord\" \n                              ref={passordGjRef} \n                              className=\"validate\"\n                            />\n                        </div>\n                        \n                        \n\n                        \n               \n                        {error && <p> {error} </p> }\n                        <br></br>\n                        \n                    \n                    <button disabled={loading} type=\"submit\" className=\"btn waves-effect waves-light right\">Oppdater info</button>\n                    <Link to=\"/\">Avslutt</Link>\n                </form>\n                {!erNominert && <form action=\"\" className=\"col s12\" onSubmit={handleNominationChange}>\n                <p>\n                          <label>\n                            <input type=\"checkbox\" className=\"\" onChange={handleNominer} ref={nomineringRef} />\n                            { nominerbarDisplay === true && <input type=\"checkbox\" className=\"filled-in\" onChange={handleNominer} ref={nomineringRef} /> }\n                            <span>Vil du være nominerbar?</span>\n                          </label>\n                          <button disabled={loading} type=\"submit\" className=\"btn waves-effect waves-light right\">Endre Nominering</button>\n                </p>\n                </form>}\n\n                <form action=\"\" className=\"col s12\" onSubmit= {handlePictureUpload}>\n                <h5 className=\"tittel-tekst\">Last opp/endre profilbilde: </h5>\n                        <input type=\"file\" id=\"imgInp\" onChange={handleChange} ref={bildeRef}/>\n                        <button disabled={loading} type=\"submit\" className=\"btn waves-effect waves-light right\">Last opp bilde</button>\n                </form>\n                {/*<img src={gjeldeneBruker.photoURL} width=\"100\" height=\"100\" alt=\"avatar\" className=\"circle\"/>*/}\n            </div>\n            </div>\n        </div>\n    );\n}","/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/components/Avstemming.js",["66"],"import React, { useState, useEffect, useRef } from 'react'\nimport  { db } from \"../server/firebase\"\nimport { useAuth } from \"../context/authContext\";\n\nexport default function Avstemming() {\n\n    const [brukere, setBruker] = useState(\"\")\n    const [harStemt, setharStemt] = useState();\n    const [voteId, setVoteId] = useState()\n    const { stemBruker, brukerHarStemt, gjeldeneBruker, votedOn } = useAuth()\n    const fornavnRef = useRef()\n    const etternavnRef = useRef()\n    const beskrivelseRef = useRef()\n\n\n    useEffect(() => {\n        db.collection('BrukerInfo')\n        .where(\"Nominert\", \"==\", true)\n        .get()\n        .then(snapshot => {\n          const documents = snapshot.docs.map(doc => doc.data())\n          setBruker(documents);\n        })\n    }, [])\n\n    useEffect(() => {\n        const unsub = db.collection('BrukerInfo').doc(gjeldeneBruker.uid)\n        .onSnapshot(function (doc){\n            const stemmeSjekk = doc.data().harStemt;\n            const votedId = doc.data().votedOn\n            setVoteId(votedId)\n            //console.log(stemmeSjekk)\n            if(stemmeSjekk === true){\n                setharStemt(stemmeSjekk)\n            }\n            return unsub\n        })\n        \n        \n    }, [])\n\n    \n\n    async function handleSubmit(id) {\n        const brukerFinner = brukere.find(bruker => bruker.id === id)\n        await stemBruker(brukerFinner.id, 1);\n        //console.log(gjeldeneBruker)\n        await brukerHarStemt(gjeldeneBruker.uid, true)\n        await votedOn(gjeldeneBruker.uid, brukerFinner.id)\n        \n    }\n\n   async function handleRegret() {\n        await stemBruker(voteId, -1)\n        await brukerHarStemt(gjeldeneBruker.uid, false)\n        await votedOn(gjeldeneBruker.uid, \"\")\n        window.location.reload()\n        \n    }\n\n    return ( \n    <div className=\"App\">\n        <div className=\"row width-margin\">\n        <h3 className=\"tittel-tekst\">Stem på en kandidat</h3>\n        <p>Trykk på \"stem\" for å stemme på en kandidat. Kandidaten vil da få en stemme</p>\n        { brukere && brukere.map(bruker => {\n        return(\n            <div className=\"col width-margin m6 card-panel nominerKort\" key= {bruker.id}>\n                <p ref={ fornavnRef } ><strong>{ bruker.Fornavn }</strong> </p>\n                <p ref={ etternavnRef } ><strong>{ bruker.Etternavn }</strong>:</p>\n                <p ref={ beskrivelseRef } > { bruker.beskrivelse } </p>\n                {  !harStemt && <button className=\"float-right btn waves-effect waves-light\" onClick= { () => handleSubmit(bruker.id) } >Stem</button>}\n                {   harStemt && <button className=\"float-right btn waves-effect waves-light\" onClick= { () => handleSubmit(bruker.id) } disabled >Stem</button>}\n            </div>\n        )}\n        )\n        }\n        { harStemt && <button className=\"float-right btn waves-effect waves-light\" onClick= {() => handleRegret()}>Angre</button>}\n        </div>\n    </div>\n     );\n}\n \n","/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/server/firebase.js",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":34,"column":13,"nodeType":"73","endLine":34,"endColumn":78},{"ruleId":"71","severity":1,"message":"72","line":61,"column":7,"nodeType":"73","endLine":61,"endColumn":72},{"ruleId":"74","severity":1,"message":"75","line":63,"column":6,"nodeType":"76","endLine":63,"endColumn":8,"suggestions":"77"},{"ruleId":"74","severity":1,"message":"75","line":40,"column":8,"nodeType":"76","endLine":40,"endColumn":10,"suggestions":"78"},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'gjeldeneBruker.uid'. Either include it or remove the dependency array.","ArrayExpression",["81"],["82"],"no-global-assign","no-unsafe-negation",{"desc":"83","fix":"84"},{"desc":"83","fix":"85"},"Update the dependencies array to be: [gjeldeneBruker.uid]",{"range":"86","text":"87"},{"range":"88","text":"87"},[1939,1941],"[gjeldeneBruker.uid]",[1226,1228]]