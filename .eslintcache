[{"/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/index.js":"1","/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/App.js":"2","/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/reportWebVitals.js":"3","/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/components/Registrering.js":"4","/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/components/PrivateRoute.js":"5","/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/components/Logginn.js":"6","/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/components/Home.js":"7","/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/components/GlemtPassord.js":"8","/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/components/Navbar.js":"9","/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/context/authContext.js":"10","/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/components/Nominering.js":"11","/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/components/BrukerProfil.js":"12","/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/components/Avstemming.js":"13","/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/server/firebase.js":"14"},{"size":478,"mtime":1622451491724,"results":"15","hashOfConfig":"16"},{"size":1238,"mtime":1622713359339,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1622451491724,"results":"18","hashOfConfig":"16"},{"size":4792,"mtime":1622706856397,"results":"19","hashOfConfig":"16"},{"size":421,"mtime":1622451491723,"results":"20","hashOfConfig":"16"},{"size":2432,"mtime":1622713359339,"results":"21","hashOfConfig":"16"},{"size":1178,"mtime":1622631441513,"results":"22","hashOfConfig":"16"},{"size":1768,"mtime":1622706715093,"results":"23","hashOfConfig":"16"},{"size":5044,"mtime":1622713447904,"results":"24","hashOfConfig":"16"},{"size":5624,"mtime":1622713359340,"results":"25","hashOfConfig":"16"},{"size":2198,"mtime":1622631201976,"results":"26","hashOfConfig":"16"},{"size":9109,"mtime":1622714419768,"results":"27","hashOfConfig":"16"},{"size":2942,"mtime":1622620678372,"results":"28","hashOfConfig":"16"},{"size":654,"mtime":1622451491724,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1yy4w9a",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/index.js",[],["61","62"],"/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/App.js",[],"/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/reportWebVitals.js",[],"/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/components/Registrering.js",[],"/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/components/PrivateRoute.js",[],"/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/components/Logginn.js",[],"/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/components/Home.js",[],"/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/components/GlemtPassord.js",[],"/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/components/Navbar.js",["63","64"],"/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/context/authContext.js",["65"],"import React, { useContext, useState, useEffect} from \"react\"\nimport  { auth, db } from \"../server/firebase\"\nimport 'firebase/firestore';\nimport { storage } from \"../server/firebase\";\nimport firebase from 'firebase/app'\n\n\n\n\n\n//Når nye komponenter blir tatt frem lytter de til context objektet laget her\nconst AuthContext = React.createContext()\n\n//Gir tilgang til verdiene i andre komponenter\nexport function useAuth() {\n  return useContext(AuthContext)\n}\n\n//1. Dette er informasjon som vi ønsker at skal få tilgang til context\n//2. gjeldeneBruker håndtere alle bruker attributter. f.eks. info ved registrering og state til ulike komponenter\n\nexport function AuthProvider({ children }) {\n  const [gjeldeneBruker, setGjeldeneBruker] = useState()\n  const [fornavnDisplay, setFornavnDisplay] = useState()\n  const [etternavnDisplay, setEtternavnDisplay] = useState()\n  const [nominerbarDisplay, setNominerbarDisplay] = useState()\n  const [loading, setLoading] = useState(true)\n  const [errors, setError] = useState(\"\")\n  \n\nfunction stemBruker(id, valueChange) {\n  return db.collection(\"BrukerInfo\")\n  .doc(id)\n  .update({\n    antallStemmer: firebase.firestore.FieldValue.increment(valueChange)\n  })\n}\n\n\nfunction brukerHarStemt(id, booleanParam) {\n  return db.collection(\"BrukerInfo\")\n  .doc(id)\n  .update({\n    harStemt: booleanParam\n  })\n}\n\nfunction votedOn(id, stemtId) {\n  return db.collection(\"BrukerInfo\")\n  .doc(id)\n  .update({\n    votedOn: stemtId\n  })\n}\n\n \nasync function nominerBruker(id, fornavn, etternavn){\n  await db.collection(\"BrukerInfo\")\n  .doc(id)\n  .update({\n    Nominert: true,\n    Nominerbar: false\n  })\n  .then(() => {\n    console.log(fornavn + \" \" + etternavn + \" er nominert\")\n  })\n  .catch((error) => {\n    console.error(\"Kunne ikke nominere\")\n  })\n}\n\n//Henter inn informasjon fra registering og legger det inn i firebase\n  function registrer(email, password, fornavn, etternavn, nominerbar) {\n    auth.createUserWithEmailAndPassword(email, password).then( cred => {\n      return db.collection('BrukerInfo').doc(cred.user.uid).set({\n        Email: email, \n        Fornavn: fornavn,\n        Etternavn: etternavn,\n        Nominerbar: nominerbar,\n        beskrivelse: null,\n        id: cred.user.uid,\n        harStemt: false,\n        votedOn:\"\",\n        antallStemmer: 0,\n        Nominert: false\n      })  \n    })\n  setError(\"\")\n  console.log(registrer)\n  }\n\n\n  function logginn(email, password) {\n    return auth.signInWithEmailAndPassword(email, password)\n    \n  }\n\n  function loggut() {\n    auth.signOut();\n  }\n\n  function glemtPassord(email) {\n    return auth.sendPasswordResetEmail(email);\n }\n\n function uploadBilde(picFile) {\n  return storage.ref('brukere/' + gjeldeneBruker.uid + '/profile.jpg').put(picFile);\n }\n\n function oppdaterMail(email) {\n  return gjeldeneBruker.updateEmail(email)\n}\n\nfunction oppdaterPassord(password) {\n  return gjeldeneBruker.updatePassword(password)\n}\n\nfunction oppdaterFNavn (fornavn)  {\n  return db.collection('BrukerInfo').doc(gjeldeneBruker.uid).update({\n    Fornavn: fornavn\n  })\n}\nfunction oppdaterENavn (etternavn)  {\n  return db.collection('BrukerInfo').doc(gjeldeneBruker.uid).update({\n    Etternavn: etternavn\n  })\n}\n\nfunction oppdaterNom(nominerbar) {\n  return db.collection('BrukerInfo').doc(gjeldeneBruker.uid).update({\n    Nominerbar: nominerbar\n  })\n} \n\nfunction oppdaterBeskrivelse(beskrivelse) {\n  return db.collection('BrukerInfo').doc(gjeldeneBruker.uid).update({\n    beskrivelse: beskrivelse\n  })\n}\n\nfunction sjekkEpost() {\n  \n  \n  setTimeout(() => {\n   \n    var user = firebase.auth().currentUser;\n    user.sendEmailVerification().then(function() {\n      setError(\"Aktiverings epost er sendt til din epost\")// Email sent.\n      refreshSide();\n    })      \n\n\n  }, 1000);\n  \n  \n}\n\nfunction refreshSide() {\n  setTimeout(() => {\n  window.location.reload(false);\n  }, 2000);\n}\n  \n  //useEffect: Når noe skjer vil vi at en bivirkning skal skje\n  //setTimeout setter en delay før den skal displaye fornavn og etternavn\n  //3. Unsubscribe gjør slik at etter eventen har skjedd, stopper serveren å lytte til den\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      setGjeldeneBruker(user)\n      if(user) {\n        setTimeout(() => {\n        db.collection(\"BrukerInfo\").doc(user.uid).onSnapshot(function (doc){\n          const firstName = doc.data().Fornavn;\n          const lastName = doc.data().Etternavn;\n          const nominert = doc.data().Nominerbar;\n          setFornavnDisplay(firstName);\n          setEtternavnDisplay(lastName);\n          setNominerbarDisplay(nominert)\n          /*console.log(firstName, lastName)*/\n       });\n      }, 750);\n      }\n      setLoading(false)\n      return unsubscribe\n    })\n\n    \n  }, [])\n\n  //Ulike verdier man gir Provider tilgang til å lytte etter\n  const value = {\n    gjeldeneBruker,\n    fornavnDisplay,\n    etternavnDisplay,\n    nominerbarDisplay,\n    errors,\n    registrer,\n    logginn,\n    loggut,\n    glemtPassord,\n    uploadBilde,\n    oppdaterPassord,\n    oppdaterMail,\n    oppdaterFNavn,\n    oppdaterENavn,\n    oppdaterNom,\n    oppdaterBeskrivelse,\n    nominerBruker,\n    stemBruker,\n    brukerHarStemt,\n    sjekkEpost,\n    votedOn\n  }\n\n  return (\n      //1. Setter inn all data i Provider som trenger tilgang til informasjon i context\n      //2. Alt på innsiden av Provider wrapperen har tilgang til denne informasjonen\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  )\n}","/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/components/Nominering.js",[],"/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/components/BrukerProfil.js",["66"],"/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/components/Avstemming.js",["67"],"import React, { useState, useEffect, useRef } from 'react'\nimport  { db } from \"../server/firebase\"\nimport { useAuth } from \"../context/authContext\";\n\nexport default function Avstemming() {\n\n    const [brukere, setBruker] = useState(\"\")\n    const [harStemt, setharStemt] = useState();\n    const [voteId, setVoteId] = useState()\n    const { stemBruker, brukerHarStemt, gjeldeneBruker, votedOn } = useAuth()\n    const fornavnRef = useRef()\n    const etternavnRef = useRef()\n    const beskrivelseRef = useRef()\n\n\n    useEffect(() => {\n        db.collection('BrukerInfo')\n        .where(\"Nominert\", \"==\", true)\n        .get()\n        .then(snapshot => {\n          const documents = snapshot.docs.map(doc => doc.data())\n          setBruker(documents);\n        })\n    }, [])\n\n    useEffect(() => {\n        const unsub = db.collection('BrukerInfo').doc(gjeldeneBruker.uid)\n        .onSnapshot(function (doc){\n            const stemmeSjekk = doc.data().harStemt;\n            const votedId = doc.data().votedOn\n            setVoteId(votedId)\n            //console.log(stemmeSjekk)\n            if(stemmeSjekk === true){\n                setharStemt(stemmeSjekk)\n            }\n            return unsub\n        })\n        \n        \n    }, [])\n\n    \n\n    async function handleSubmit(id) {\n        const brukerFinner = brukere.find(bruker => bruker.id === id)\n        await stemBruker(brukerFinner.id, 1);\n        //console.log(gjeldeneBruker)\n        await brukerHarStemt(gjeldeneBruker.uid, true)\n        await votedOn(gjeldeneBruker.uid, brukerFinner.id)\n        \n    }\n\n   async function handleRegret() {\n        await stemBruker(voteId, -1)\n        await brukerHarStemt(gjeldeneBruker.uid, false)\n        await votedOn(gjeldeneBruker.uid, \"\")\n        window.location.reload()\n        \n    }\n\n    return ( \n    <div className=\"App\">\n        <div className=\"row width-margin\">\n        <h3 className=\"tittel-tekst\">Stem på en kandidat</h3>\n        <p>Trykk på \"stem\" for å stemme på en kandidat. Kandidaten vil da få en stemme</p>\n        { brukere && brukere.map(bruker => {\n        return(\n            <div className=\"col width-margin m6 card-panel nominerKort\" key= {bruker.id}>\n                <p ref={ fornavnRef } ><strong>{ bruker.Fornavn }</strong> </p>\n                <p ref={ etternavnRef } ><strong>{ bruker.Etternavn }</strong>:</p>\n                <p ref={ beskrivelseRef } > { bruker.beskrivelse } </p>\n                {  !harStemt && <button className=\"float-right btn waves-effect waves-light\" onClick= { () => handleSubmit(bruker.id) } >Stem</button>}\n                {   harStemt && <button className=\"float-right btn waves-effect waves-light\" onClick= { () => handleSubmit(bruker.id) } disabled >Stem</button>}\n            </div>\n        )}\n        )\n        }\n        { harStemt && <button className=\"float-right btn waves-effect waves-light\" onClick= {() => handleRegret()}>Angre</button>}\n        </div>\n    </div>\n     );\n}\n \n","/Users/matsandersen/Library/Mobile Documents/com~apple~CloudDocs/Studieåret Høst 2020/APP2000 /Utviklingsoppgave1/React-Utviklingsoppgave-/src/server/firebase.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":34,"column":13,"nodeType":"74","endLine":34,"endColumn":78},{"ruleId":"72","severity":1,"message":"73","line":63,"column":7,"nodeType":"74","endLine":63,"endColumn":72},{"ruleId":"75","severity":1,"message":"76","line":90,"column":20,"nodeType":"77","messageId":"78","endLine":90,"endColumn":22},{"ruleId":"79","severity":1,"message":"80","line":63,"column":6,"nodeType":"81","endLine":63,"endColumn":8,"suggestions":"82"},{"ruleId":"79","severity":1,"message":"80","line":40,"column":8,"nodeType":"81","endLine":40,"endColumn":10,"suggestions":"83"},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'gjeldeneBruker.uid'. Either include it or remove the dependency array.","ArrayExpression",["86"],["87"],"no-global-assign","no-unsafe-negation",{"desc":"88","fix":"89"},{"desc":"88","fix":"90"},"Update the dependencies array to be: [gjeldeneBruker.uid]",{"range":"91","text":"92"},{"range":"93","text":"92"},[1939,1941],"[gjeldeneBruker.uid]",[1226,1228]]