[{"C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\index.js":"1","C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\reportWebVitals.js":"2","C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\App.js":"3","C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\components\\Home.js":"4","C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\components\\Logginn.js":"5","C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\components\\Avstemming.js":"6","C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\components\\Nominering.js":"7","C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\components\\Registrering.js":"8","C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\components\\PrivateRoute.js":"9","C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\components\\GlemtPassord.js":"10","C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\context\\authContext.js":"11","C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\components\\BrukerProfil.js":"12","C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\components\\Navbar.js":"13","C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\server\\firebase.js":"14"},{"size":478,"mtime":1611241553792,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1620651356347,"results":"17","hashOfConfig":"16"},{"size":1285,"mtime":1612709643663,"results":"18","hashOfConfig":"16"},{"size":1332,"mtime":1618571972133,"results":"19","hashOfConfig":"16"},{"size":2463,"mtime":1618568038436,"results":"20","hashOfConfig":"16"},{"size":2293,"mtime":1618561848000,"results":"21","hashOfConfig":"16"},{"size":2318,"mtime":1618571134781,"results":"22","hashOfConfig":"16"},{"size":4792,"mtime":1618568038455,"results":"23","hashOfConfig":"16"},{"size":438,"mtime":1611546185441,"results":"24","hashOfConfig":"16"},{"size":1803,"mtime":1618565645487,"results":"25","hashOfConfig":"16"},{"size":5779,"mtime":1618569902257,"results":"26","hashOfConfig":"16"},{"size":8040,"mtime":1618570422375,"results":"27","hashOfConfig":"16"},{"size":4290,"mtime":1618571926524,"results":"28","hashOfConfig":"16"},{"size":674,"mtime":1619778993209,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"hdl2v8",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\index.js",[],["63","64"],"C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\reportWebVitals.js",[],"C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\App.js",[],"C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\components\\Home.js",[],"C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\components\\Logginn.js",["65","66"],"import React, { useRef, useState } from \"react\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport { useAuth } from \"../context/authContext\"\r\n\r\n\r\nfunction Logginn(){\r\n      //Referanser til verdier\r\n  const emailRef = useRef()\r\n  const passordRef = useRef()\r\n  //Setter i bruk useAuth funksjonen i authContext\r\n  const { logginn } = useAuth()\r\n  //Feilmelding state som kan settes der feilmeldinger trenges\r\n  const [error, setError] = useState(\"\")\r\n  //Får å disable ulike ting mens siden loader\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const history= useHistory()\r\n  \r\n  //Funksjon som settes for <form> sår kjører når det blir submittet\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    \r\n    try {\r\n    \r\n      //Hvis det ikke er noen feil\r\n      setError(\"\")\r\n      setLoading(true)\r\n      await logginn(emailRef.current.value, passordRef.current.value)\r\n      history.push(\"/\")\r\n    } catch {\r\n      //Alle feil som ikke har blitt laget feilmelding til går her\r\n      setError(\"Innlogging mislykkes\")\r\n    }\r\n    //Stopper loadinger etter alt har gått gjennom\r\n    setLoading(false)\r\n  \r\n  }\r\n  \r\n\r\n    return ( \r\n    <div className=\"App\">\r\n        <div class=\"row\">\r\n            <div className=\"col s12 offset-m4 m4 card-panel\">\r\n                <h2>Logg inn</h2>\r\n                {error && <p>{error}</p>}\r\n                <form onSubmit={handleSubmit} className=\"col s12\">\r\n                    \r\n                        <div className=\"input-field col s12\">\r\n                            <i className=\"material-icons prefix\">mail_outline</i>\r\n                            <input type=\"email\" placeholder=\"Email\" ref={emailRef} className=\"validate\"/>\r\n                        </div>\r\n                        <div className=\"input-field col s12\">\r\n                            <i className=\"material-icons prefix\">lock_outline</i>\r\n                            <input type=\"password\" placeholder=\"Passord\" ref={passordRef} className=\"validate\"/>\r\n                        </div>\r\n                    \r\n                    <button disabled={loading} type=\"submit\" className=\"btn waves-effect waves-light right\">Logg Inn</button>\r\n                </form>\r\n                <p className=\"\">Trenger du bruker? <Link to=\"/Registrering\">Registrer deg</Link></p>\r\n                <p> <Link to=\"/GlemtPassord\">Glemt Passord?</Link></p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n     );\r\n}\r\n \r\nexport default Logginn;","C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\components\\Avstemming.js",["67"],"import React, { useState, useEffect, useRef } from 'react'\r\nimport  { db } from \"../server/firebase\"\r\nimport { useAuth } from \"../context/authContext\";\r\n\r\nexport default function Avstemming() {\r\n\r\n    const [brukere, setBruker] = useState(\"\")\r\n    const [harStemt, setharStemt] = useState();\r\n    const { stemBruker, brukerHarStemt, gjeldeneBruker } = useAuth()\r\n    const fornavnRef = useRef()\r\n    const etternavnRef = useRef()\r\n\r\n\r\n    useEffect(() => {\r\n        db.collection('NominerteBrukere')\r\n        .get()\r\n        .then(snapshot => {\r\n          const documents = snapshot.docs.map(doc => doc.data())\r\n          setBruker(documents);\r\n          //console.log(documents)\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const unsub = db.collection('BrukerInfo').doc(gjeldeneBruker.uid)\r\n        .onSnapshot(function (doc){\r\n            const stemmeSjekk = doc.data().harStemt;\r\n            //console.log(stemmeSjekk)\r\n            if(stemmeSjekk === true){\r\n                setharStemt(stemmeSjekk)\r\n            }\r\n            \r\n        })\r\n        \r\n        return unsub\r\n    }, [])\r\n\r\n    \r\n\r\n    async function handleSubmit(id) {\r\n        const brukerFinner = brukere.find(bruker => bruker.id === id)\r\n        await stemBruker(brukerFinner.id);\r\n        //console.log(gjeldeneBruker)\r\n        await brukerHarStemt(gjeldeneBruker.uid)\r\n        \r\n    }\r\n\r\n    return ( \r\n    <div className=\"App\">\r\n        <div className=\"row width-margin\">\r\n        <h3>Stem på en kandidat</h3>\r\n        <p>Trykk på \"stem\" for å stemme på en kandidat. Kandidaten vil da få en stemme</p>\r\n        { brukere && brukere.map(bruker => {\r\n        return(\r\n            <div className=\"col width-margin m6 card-panel nominerKort\" key= {bruker.id} >\r\n                <p ref={ fornavnRef } > { bruker.Fornavn } </p>\r\n                <p ref={ etternavnRef } > { bruker.Etternavn } </p>\r\n                { !harStemt && <button className=\"float-right btn waves-effect waves-light\" onClick= { () => handleSubmit(bruker.id) } >Stem</button>}\r\n                { harStemt && <button className=\"float-right btn waves-effect waves-light\" onClick= { () => handleSubmit(bruker.id) } disabled >Stem</button>}\r\n            </div>\r\n        )}\r\n        )\r\n        }\r\n        </div>\r\n    </div>\r\n     );\r\n}\r\n \r\n","C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\components\\Nominering.js",["68"],"import React, { useState, useEffect, useRef } from 'react'\r\nimport  { db } from \"../server/firebase\"\r\nimport { useAuth } from \"../context/authContext\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\n\r\nexport default function Nominering(){\r\n    const [brukere, setBruker] = useState(\"\")\r\n    const { nominerBruker, setNominerbar, gjeldeneBruker } = useAuth()\r\n    const fornavnRef = useRef()\r\n    const etternavnRef = useRef()\r\n    const beskrivelseRef = useRef()\r\n    \r\n    useEffect(() => {\r\n        db.collection('BrukerInfo')\r\n        .where(\"Nominerbar\", \"==\", true)\r\n        .get()\r\n        .then(snapshot => {\r\n          const documents = snapshot.docs.map(doc => doc.data())\r\n          setBruker(documents);\r\n        })\r\n    }, [])\r\n\r\n    async function handleSubmit(id){\r\n        //e.preventDefault();\r\n        const brukerFinner = brukere.find(bruker => bruker.id === id)\r\n        await nominerBruker(brukerFinner.Fornavn, brukerFinner.Etternavn, brukerFinner.id )\r\n        await setNominerbar(brukerFinner.id)\r\n        console.log(brukerFinner.Fornavn, brukerFinner.Etternavn, brukerFinner.id)\r\n        window.location.reload()\r\n    }\r\n\r\n    return ( \r\n    <div className=\"App\">\r\n        <div className=\"row width-margin\">\r\n        <h3>Nominér en kandidat</h3>\r\n        <p> Her vises brukere som kan nomineres videre for avsteming.\r\n            <br/>\r\n            Trykk på \"nominér\" for å nominere en kandidat. Kandidaten vil da bli registrert for avstemming.\r\n            <br/>\r\n            Hvis du ønsker å avgi stemme på en allerede nominert bruker, kan du gå til: \r\n            {gjeldeneBruker && <a className=\"nomList\"><NavLink to=\"/Avstemming\"> Avstemming</NavLink></a>}\r\n            </p>\r\n        { brukere && brukere.map(bruker => {\r\n        return(\r\n            <div className=\"col width-margin m6 card-panel nominerKort\" key= {bruker.id} >\r\n                <p ref={ fornavnRef } > { bruker.Fornavn } </p>\r\n                <p ref={ etternavnRef } > { bruker.Etternavn } </p>\r\n                <p ref={ beskrivelseRef } >{ bruker.beskrivelse }</p>\r\n                <button className=\"float-right btn waves-effect waves-light\" onClick= { () => handleSubmit(bruker.id) } >Nominér</button> \r\n            </div>\r\n        )}\r\n        )\r\n        } \r\n        </div>\r\n    </div>\r\n     );\r\n}\r\n \r\n\r\n","C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\components\\Registrering.js",[],"C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\components\\PrivateRoute.js",[],"C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\components\\GlemtPassord.js",[],"C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\context\\authContext.js",[],"C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\components\\BrukerProfil.js",[],"C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\components\\Navbar.js",["69","70"],"import { NavLink, withRouter, useHistory } from 'react-router-dom';\r\nimport React, {useEffect, useState } from 'react'\r\nimport { useAuth } from '../context/authContext'\r\nimport M from 'materialize-css';\r\n\r\n\r\n\r\nconst Navbar = () => {\r\n    const [error, setError] = useState(\"\");\r\n    const { gjeldeneBruker, loggut } = useAuth();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => { \r\n      M.Sidenav.init(document.querySelectorAll('.sidenav'), {});\r\n}, [])\r\n\r\n    async function handleImageError (e) { <img src={'defaultimage/default.png'} width=\"100\" height=\"100\" alt=\"avatar\" /> }\r\n\r\n    async function handleLoggut() {\r\n        setError(\"\");\r\n\r\n        try {\r\n            await loggut()\r\n            history.push(\"/Logginn\")\r\n        }catch {\r\n            setError(\"Utlogging mislykkes\")\r\n        }\r\n    } if(!gjeldeneBruker){\r\n        return (<div className=\"App\">\r\n      <nav className=\"deep-purple darken-4\">  \r\n      <div className=\"nav-wrapper container nav\">\r\n        \r\n      <a id=\"logo-container\" href=\"/\" className=\"brand-logo\">USN-valget</a>\r\n      <a href=\"#\" data-target=\"nav-mobile\" className=\"sidenav-trigger\"><i className=\"material-icons\">menu</i></a>\r\n          <div className=\"\">\r\n              <ul className=\"right hide-on-med-and-down\">\r\n        {<li><NavLink to=\"/Logginn\">Logg inn</NavLink></li>}\r\n        {<li><NavLink to=\"/Registrering\">Registrering</NavLink></li>}\r\n        {error && <p>{error}</p>}\r\n        </ul>\r\n        <ul id=\"nav-mobile\" className=\"sidenav\">\r\n        {<li><NavLink to=\"/Logginn\">Logg inn</NavLink></li>}\r\n        {<li><NavLink to=\"/Registrering\">Registrering</NavLink></li>}\r\n        \r\n        </ul>\r\n        </div>\r\n        </div>\r\n        </nav>\r\n        </div> \r\n        \r\n        )\r\n        \r\n\r\n    } else {\r\n    return ( \r\n    <div className=\"App\">\r\n      <nav className=\"deep-purple darken-4\">  \r\n      <div className=\"nav-wrapper container nav\">\r\n        \r\n      <a id=\"logo-container\" href=\"/\" className=\"brand-logo\">USN-valget</a>\r\n      <a href=\"#\" data-target=\"nav-mobile\" className=\"sidenav-trigger\"><i className=\"material-icons\">menu</i></a>\r\n          <div className=\"\">\r\n              <ul className=\"right hide-on-med-and-down\">\r\n                {gjeldeneBruker.emailVerified === false && <li><NavLink to=\"/Logginn\">Logg inn</NavLink></li>}\r\n                {gjeldeneBruker.emailVerified === false && <li><NavLink to=\"/Registrering\">Registrering</NavLink></li>}\r\n                  {gjeldeneBruker.emailVerified === true && <li><NavLink to=\"/\">Hjem</NavLink></li>}\r\n                  {gjeldeneBruker.emailVerified === true && <li><NavLink to=\"/Avstemming\">Avstemming</NavLink></li>}\r\n                  {gjeldeneBruker.emailVerified === true && <li><NavLink to=\"/Nominering\">Nominering</NavLink></li>}\r\n                  {gjeldeneBruker.emailVerified === true && <li><NavLink to=\"/BrukerProfil\">Profil</NavLink></li>}\r\n                  { gjeldeneBruker.photoURL && <img src={ gjeldeneBruker.photoURL } onError={handleImageError} width=\"100\" height=\"100\" alt=\"avatar\" className=\"circle z-depth-2\"/> }\r\n                  {gjeldeneBruker.emailVerified === true && <button onClick={handleLoggut} className=\"loggutKnapp btn waves-effect waves-light right\">Logg ut</button>}\r\n                  {error && <p>{error}</p>}\r\n              </ul>\r\n              \r\n              <ul id=\"nav-mobile\" className=\"sidenav\">\r\n                {gjeldeneBruker && <li><NavLink to=\"/\">Hjem</NavLink></li>}\r\n                  {gjeldeneBruker && <li><NavLink to=\"/Avstemming\">Avstemming</NavLink></li>}\r\n                  {gjeldeneBruker && <li><NavLink to=\"/Nominering\">Nominering</NavLink></li>}\r\n                  {gjeldeneBruker && <li><NavLink to=\"/BrukerProfil\">Profil</NavLink></li>}\r\n                  {!gjeldeneBruker && <li><NavLink to=\"/Logginn\">Logg inn</NavLink></li>}\r\n                  {!gjeldeneBruker && <li><NavLink to=\"/Registrering\">Registrering</NavLink></li>}\r\n                  {gjeldeneBruker && <button onClick={handleLoggut} className=\"loggutKnapp btn waves-effect waves-light right\">Logg ut</button>}\r\n                  {error && <p>{error}</p>}   \r\n              </ul>\r\n            </div>\r\n            </div>\r\n            </nav> \r\n      </div>    \r\n      \r\n    \r\n     );\r\n}\r\n}\r\n \r\nexport default withRouter(Navbar);","C:\\Users\\Seb\\Documents\\GitHub\\React-Utviklingsoppgave-\\src\\server\\firebase.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":4,"column":10,"nodeType":"77","messageId":"78","endLine":4,"endColumn":14},{"ruleId":"75","severity":1,"message":"79","line":11,"column":20,"nodeType":"77","messageId":"78","endLine":11,"endColumn":34},{"ruleId":"80","severity":1,"message":"81","line":36,"column":8,"nodeType":"82","endLine":36,"endColumn":10,"suggestions":"83"},{"ruleId":"84","severity":1,"message":"85","line":43,"column":32,"nodeType":"86","endLine":43,"endColumn":55},{"ruleId":"84","severity":1,"message":"87","line":34,"column":7,"nodeType":"86","endLine":34,"endColumn":72},{"ruleId":"84","severity":1,"message":"87","line":61,"column":7,"nodeType":"86","endLine":61,"endColumn":72},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'auth' is defined but never used.","Identifier","unusedVar","'gjeldeneBruker' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'gjeldeneBruker.uid'. Either include it or remove the dependency array.","ArrayExpression",["90"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},"Update the dependencies array to be: [gjeldeneBruker.uid]",{"range":"93","text":"94"},[1097,1099],"[gjeldeneBruker.uid]"]